{"uid":"400e29a582d86c1a","name":"Создание заказа без токена","fullName":"test_order.TestOrder#test_create_order_user_unauthorized","historyId":"62079a43b97bbdd647b7500f15cd0290","time":{"start":1727293229325,"stop":1727293229529,"duration":204},"status":"failed","statusMessage":"AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_order.TestOrder object at 0x10641dd50>\n\n    @allure.title('Создание заказа без токена') # будет падать, тк не соответствует ожидаемому результату, наставник подтвердил.\n    def test_create_order_user_unauthorized(self):\n        order = Order()\n        response = order.create_order(api_steps.order.payload.OrderPayloads.one_ingredient)\n>       assert response.status_code == 401\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntest_order.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727293228771,"stop":1727293228784,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1727293228784,"stop":1727293228784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_order.TestOrder object at 0x10641dd50>\n\n    @allure.title('Создание заказа без токена') # будет падать, тк не соответствует ожидаемому результату, наставник подтвердил.\n    def test_create_order_user_unauthorized(self):\n        order = Order()\n        response = order.create_order(api_steps.order.payload.OrderPayloads.one_ingredient)\n>       assert response.status_code == 401\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntest_order.py:30: AssertionError","steps":[{"name":"Создать заказ","time":{"start":1727293229325,"stop":1727293229528,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"payload","value":"{'ingredients': ['61c0c5a71d1f82001bdaaa70']}"},{"name":"headers","value":"None"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrder"},{"name":"host","value":"192.168.1.5"},{"name":"thread","value":"52935-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"400e29a582d86c1a.json","parameterValues":[]}